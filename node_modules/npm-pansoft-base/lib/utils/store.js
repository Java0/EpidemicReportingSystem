'use strict';

exports.__esModule = true;
exports.clearStore = exports.getAllStore = exports.removeStore = exports.getStore = exports.setStore = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _validate = require('./validate');

var _website = require('@/config/website');

var _website2 = _interopRequireDefault(_website);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var keyName = _website2.default.key + '-';
/**
 * 存储localStorage
 */
var setStore = exports.setStore = function setStore() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var name = params.name,
        content = params.content,
        type = params.type;

    name = keyName + name;
    var obj = {
        dataType: typeof content === 'undefined' ? 'undefined' : _typeof(content),
        content: content,
        type: type,
        datetime: new Date(new Date().getTime() + _website2.default.tokenTime)
    };
    if (type) window.sessionStorage.setItem(name, JSON.stringify(obj));else window.localStorage.setItem(name, JSON.stringify(obj));
};
/**
 * 获取localStorage
 */

var getStore = exports.getStore = function getStore() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var name = params.name,
        debug = params.debug;

    name = keyName + name;
    var obj = {},
        content = void 0;
    obj = window.sessionStorage.getItem(name);
    if ((0, _validate.validatenull)(obj)) obj = window.localStorage.getItem(name);
    if ((0, _validate.validatenull)(obj)) return;
    try {
        obj = JSON.parse(obj);
    } catch (e) {
        return obj;
    }
    if (debug) {
        return obj;
    }
    if (obj.dataType == 'string') {
        content = obj.content;
    } else if (obj.dataType == 'number') {
        content = Number(obj.content);
    } else if (obj.dataType == 'boolean') {
        content = eval(obj.content);
    } else if (obj.dataType == 'object') {
        content = obj.content;
    }
    return content;
};
/**
 * 删除localStorage
 */
var removeStore = exports.removeStore = function removeStore() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var name = params.name,
        type = params.type;

    name = keyName + name;
    if (type) {
        window.sessionStorage.removeItem(name);
    } else {
        window.localStorage.removeItem(name);
    }
};

/**
 * 获取全部localStorage
 */
var getAllStore = exports.getAllStore = function getAllStore() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var list = [];
    var type = params.type;

    if (type) {
        for (var i = 0; i <= window.sessionStorage.length; i++) {
            list.push({
                name: window.sessionStorage.key(i),
                content: getStore({
                    name: window.sessionStorage.key(i),
                    type: 'session'
                })
            });
        }
    } else {
        for (var _i = 0; _i <= window.localStorage.length; _i++) {
            list.push({
                name: window.localStorage.key(_i),
                content: getStore({
                    name: window.localStorage.key(_i)
                })
            });
        }
    }
    return list;
};

/**
 * 清空全部localStorage
 */
var clearStore = exports.clearStore = function clearStore() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var type = params.type;

    if (type) {
        window.sessionStorage.clear();
    } else {
        window.localStorage.clear();
    }
};