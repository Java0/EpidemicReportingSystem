'use strict';

exports.__esModule = true;
exports.getCode = exports.copy = exports.update = exports.add = exports.remove = exports.build = exports.getList = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _axios = require('npm-pansoft-base/lib/router/axios');

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getList = exports.getList = function getList(current, size, params) {
  return (0, _axios2.default)({
    url: '/api/blade-develop/code/list',
    method: 'get',
    params: _extends({}, params, {
      current: current,
      size: size
    })
  });
};

var build = exports.build = function build(ids) {
  return (0, _axios2.default)({
    url: '/api/blade-develop/code/gen-code',
    method: 'post',
    params: {
      ids: ids,
      system: 'saber'
    }
  });
};
var remove = exports.remove = function remove(ids) {
  return (0, _axios2.default)({
    url: '/api/blade-develop/code/remove',
    method: 'post',
    params: {
      ids: ids
    }
  });
};

var add = exports.add = function add(row) {
  return (0, _axios2.default)({
    url: '/api/blade-develop/code/submit',
    method: 'post',
    data: row
  });
};

var update = exports.update = function update(row) {
  return (0, _axios2.default)({
    url: '/api/blade-develop/code/submit',
    method: 'post',
    data: row
  });
};

var copy = exports.copy = function copy(id) {
  return (0, _axios2.default)({
    url: '/api/blade-develop/code/copy',
    method: 'post',
    params: {
      id: id
    }
  });
};

var getCode = exports.getCode = function getCode(id) {
  return (0, _axios2.default)({
    url: '/api/blade-develop/code/detail',
    method: 'get',
    params: {
      id: id
    }
  });
};